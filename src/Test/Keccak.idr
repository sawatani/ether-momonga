module Test.Keccak

import Data.Bits
import Data.Bytes
import Data.Crypt.Keccak
import Data.Crypt.Keccak.SpongeParam
import Data.IOArray
import Data.Iterable
import Data.Vect
import Test.Unit.Assertions
import Test.Unit.Display
import Test.Unit.Runners
import Test.Keccak256

%default total
%access export

check : (LazyList (Bits 8) -> IO (LittleEndian _)) -> String -> IO Bool
check f hex = do
  hash <- f []
  let given = toHex hash
  assertEquals given hex

testEmpty : IO Bool
testEmpty = do
  putStrLn $ heading "Hash empties"
  check keccak256 "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
  check keccak384 "2C23146A63A29ACF99E73B88F8C24EAA7DC60AA771780CCC006AFBFA8FE2479B2DD2B21362337441AC12B515911957FF"
  check keccak512 "0EAB42DE4C3CEB9235FC91ACFFE746B29C29A8C366B7C60E4E67C466F36A4304C00FA9CAF9D87976BA469BCBE06713B435F091EF2769FB160CDAB33D3670680E"
  check sha3256 "A7FFC6F8BF1ED76651C14756A061D662F580FF4DE43B49FA82D80A4B80F8434A"
  check sha3384 "0C63A75B845E4F7D01107D852E4C2485C51A50AAAA94FC61995E71BBEE983A2AC3713831264ADB47FB6BD1E058D5F004"
  check sha3512 "A69F73CCA23A9AC5C8B567DC185A756E97C982164FE25859E0D1DCC1475C80A615B2123AF1F5F94C11E3E9402C3AC558F500199D95B6D3E301758586281DCD26"

testAll : IO ()
testAll = do
  Reporting.runTests [
    testEmpty
  , assumeAll
  ]
  pure ()
